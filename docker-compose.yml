version: '3.8'

services:
  # === USER SERVICE ===
  userdb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - userdb_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  userms:
    build: ./ASIDMS/userms
    container_name: userms
    depends_on:
      - userdb
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://userdb:3306/userdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8081:8080"

  # === BOOK SERVICE ===
  bookdb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bookdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - bookdb_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  bookms:
    build: ./ASIDMS/bookms
    container_name: bookms
    depends_on:
      - bookdb
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://bookdb:3306/bookdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8082:8080"

  # === CART SERVICE ===
  cartdb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cartdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - cartdb_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  cartms:
    build: ./ASIDMS/cartms
    container_name: cartms
    depends_on:
      - cartdb
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://cartdb:3306/cartdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8083:8080"

  # === ORDER SERVICE ===
  orderdb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orderdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - orderdb_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  orderms:
    build: ./ASIDMS/orderms
    container_name: orderms
    depends_on:
      - orderdb
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://orderdb:3306/orderdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8084:8080"

  # === SHIPPING SERVICE ===
  shippingdb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: shippingdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - shippingdb_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  shippingms:
    build: ./ASIDMS/shippingms
    container_name: shippingms
    depends_on:
      - shippingdb
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://shippingdb:3306/shippingdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8085:8080"

  # === KAFKA & ZOOKEEPER ===
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # === ORDER HISTORY ===
  order-history:
    build: ./order-history-service-CQRS
    container_name: order-history-service
    depends_on:
      - kafka
      - orderdb
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://orderdb:3306/orderdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8086:8080"

  # === ORCHESTRATOR ===
  orchestratorms:
    build: ./order-orchestrator-service
    container_name: orchestratorms
    depends_on:
      - orderms
      - bookms
      - cartms
      - shippingms
    restart: on-failure
    ports:
      - "8087:8080"

volumes:
  userdb_data:
  bookdb_data:
  cartdb_data:
  orderdb_data:
  shippingdb_data:
